Index: src/Services/UserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Services;\r\n\r\nimport Config.ChatAppConfig;\r\nimport Data.DataStorage;\r\nimport Models.Gender;\r\nimport Models.PasswordHash;\r\nimport Models.User;\r\n\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.UUID;\r\n\r\npublic class UserService {\r\n    private List<User> userList;\r\n    private DataStorage dataStorage;\r\n    private ChatAppConfig chatAppConfig = ChatAppConfig.getConfigInstance();\r\n\r\n    public UserService(List<User> userList) {\r\n        this.dataStorage = DataStorage.getInstance();\r\n        this.userList = this.dataStorage.readListUserAsByte();\r\n    }\r\n\r\n    public User findUserByID(String id) {\r\n        for (User user : userList) {\r\n            if (user.getId().equals(id)) {\r\n                return user;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public boolean addNewUser(Gender gender, Date dob, String firstName, String lastName, String username, String password){\r\n        String id = UUID.randomUUID().toString();\r\n        String salt = PasswordHash.getSalt();\r\n        password = PasswordHash.getSHA256Password(password, salt);\r\n        User user = new User(id, gender,dob, firstName, lastName, username, password, salt);\r\n        User tempUser = this.findUserByID(user.getId());\r\n        if (tempUser == null) {\r\n            this.userList.add(user);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public boolean login(String username, String password) {\r\n        username = username.trim();\r\n        password = password.trim();\r\n        for (User user : userList) {\r\n            String usernameCheck = user.getUsername();\r\n            String passwordCheck = user.getPassword();\r\n            String hashedPass = PasswordHash.getSHA256Password(password,user.getSalt());\r\n            if (usernameCheck.equals(username) && passwordCheck.equals(hashedPass)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Services/UserService.java b/src/Services/UserService.java
--- a/src/Services/UserService.java	(revision 33718a829ed2cbc25080343ead94b91e52c47d99)
+++ b/src/Services/UserService.java	(date 1659596901226)
@@ -3,7 +3,7 @@
 import Config.ChatAppConfig;
 import Data.DataStorage;
 import Models.Gender;
-import Models.PasswordHash;
+import Ultilities.PasswordHash;
 import Models.User;
 
 import java.util.Date;
@@ -37,6 +37,7 @@
         User tempUser = this.findUserByID(user.getId());
         if (tempUser == null) {
             this.userList.add(user);
+            this.dataStorage.saveListUserAsByte(this.userList);
             return true;
         }
         return false;
Index: src/Ultilities/InvitationCodeGenerator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Ultilities/InvitationCodeGenerator.java b/src/Ultilities/InvitationCodeGenerator.java
new file mode 100644
--- /dev/null	(date 1659596409577)
+++ b/src/Ultilities/InvitationCodeGenerator.java	(date 1659596409577)
@@ -0,0 +1,19 @@
+package Ultilities;
+
+import java.security.SecureRandom;
+import java.util.Random;
+
+public class InvitationCodeGenerator {
+    public String generate(int codeLength) {
+        char[] chars = "abcdefghijklmnopqrstuvwxyz1234567890".toCharArray();
+        StringBuilder sb = new StringBuilder();
+        Random random = new SecureRandom();
+        for (int i = 0; i < codeLength; i++) {
+            char c = chars[random.nextInt(chars.length)];
+            sb.append(c);
+        }
+        String output = sb.toString();
+        System.out.println(output);
+        return output;
+    }
+}
